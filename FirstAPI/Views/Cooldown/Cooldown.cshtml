@model FirstAPI.Models.ChampionSpellInfosViewModel

@{
    ViewBag.Title = "Cooldown";
   
}


<br />
<br />
<br />
<div class="col-md-12">
    @Html.Label("What champion do you want to see its cooldowns ? ")
</div>
<br />
@using (Html.BeginForm("Cooldown", "Cooldown", FormMethod.Post, new { @id = "AddChampForm" }))
{
    <div class="form-inline">
        <div class="col-md-12">
            <div class="container-fluid">
                @Html.DropDownList("listChamp", (SelectList)FirstAPI.WebHelperTools.SelectListHelper.getAllChampions2(), new { @Multiple = "multiple", @id = "e2_2", style = "width:20%;" })
            </div>
        </div>
    </div>
}

<h3 style="text-align:center">Tableau cooldown</h3>
<br />
@{ if (Model != null)
    {
        int nbQspell = Model.spells[0].cooldown.Length;
        int nbWspell = Model.spells[1].cooldown.Length;
        int nbEspell = Model.spells[2].cooldown.Length;
        int nbRspell = Model.spells[3].cooldown.Length;

        <table class="table table-striped table-bordered hoverTable" >
            <thead>
                <tr>
                    <th> </th>
                    <th style="text-align:center" colspan="@nbQspell"><img class="imgSpell" src="@Model.spells[0].image.full" /> <b>@Model.spells[0].name</b></th>
                    <th style="text-align:center" colspan="@nbWspell"><img class="imgSpell" src="@Model.spells[1].image.full" /> <b>@Model.spells[1].name</b></th>
                    <th style="text-align:center" colspan="@nbEspell"><img class="imgSpell" src="@Model.spells[2].image.full" /> <b>@Model.spells[2].name</b></th>
                    <th style="text-align:center;min-width:130px;" colspan="@nbRspell"><img class="imgSpell" src="@Model.spells[3].image.full" /> <b>@Model.spells[3].name</b></th>
                </tr>
                <tr>
                    <th></th>
                    @for (int i = 0; i < nbQspell; i++)
                    {
                        <th style="text-align:center">@("Q"+(i+1))</th>
                    }
                    @for (int i = 0; i < nbWspell; i++)
                    {
                        <th style="text-align:center">@("W"+ (i + 1))</th>
                    }
                    @for (int i = 0; i < nbEspell; i++)
                    {
                        <th style="text-align:center">@("E"+ (i + 1))</th>
                    }
                    @for (int i = 0; i < nbRspell; i++)
                    {
                        <th style="text-align:center">@("R"+ (i + 1))</th>
                    }
                </tr>
            </thead>
            <tbody>
                <tr style="text-align:center">
                    <th scope="row">0 %</th>
                    @for (int i = 0; i < nbQspell; i++)
                    {
                        <td>@Model.spells[0].cooldown[i]</td>
                    }
                    @for (int i = 0; i < nbWspell; i++)
                    {
                        <td>@Model.spells[1].cooldown[i]</td>
                    }
                    @for (int i = 0; i < nbEspell; i++)
                    {
                        <td>@Model.spells[2].cooldown[i]</td>
                    }
                    @for (int i = 0; i < nbRspell; i++)
                    {
                        <td>@Model.spells[3].cooldown[i]</td>
                    }
                </tr>
                <tr style="text-align:center">
                    <th scope="row">10 %</th>
                    @for (int i = 0; i < nbQspell; i++)
                    {
                        <td>@((Model.spells[0].cooldown[i] * 90 )/ 100)</td>
                    }
                    @for (int i = 0; i < nbWspell; i++)
                    {
                        <td>@((Model.spells[1].cooldown[i] * 90 )/ 100)</td>
                    }
                    @for (int i = 0; i < nbEspell; i++)
                    {
                        <td>@((Model.spells[2].cooldown[i] * 90 )/ 100)</td>
                    }
                    @for (int i = 0; i < nbRspell; i++)
                    {
                        <td>@((Model.spells[3].cooldown[i] * 90 )/ 100)</td>
                    }
                </tr>
                <tr style="text-align:center">
                    <th scope="row">20 %</th>
                    @for (int i = 0; i < nbQspell; i++)
                    {
                        <td>@((Model.spells[0].cooldown[i] * 80 )/ 100)</td>
                    }
                    @for (int i = 0; i < nbWspell; i++)
                    {
                        <td>@((Model.spells[1].cooldown[i] * 80 )/ 100)</td>
                    }
                    @for (int i = 0; i < nbEspell; i++)
                    {
                        <td>@((Model.spells[2].cooldown[i] * 80 )/ 100)</td>
                    }
                    @for (int i = 0; i < nbRspell; i++)
                    {
                        <td>@((Model.spells[3].cooldown[i] * 80 )/ 100)</td>
                    }
                </tr>
                <tr style="text-align:center">
                    <th scope="row">30 %</th>
                    @for (int i = 0; i < nbQspell; i++)
                    {
                        <td>@((Model.spells[0].cooldown[i] * 70 )/ 100)</td>
                    }
                    @for (int i = 0; i < nbWspell; i++)
                    {
                        <td>@((Model.spells[1].cooldown[i] * 70 )/ 100)</td>
                    }
                    @for (int i = 0; i < nbEspell; i++)
                    {
                        <td>@((Model.spells[2].cooldown[i] * 70 )/ 100)</td>
                    }
                    @for (int i = 0; i < nbRspell; i++)
                    {
                        <td>@((Model.spells[3].cooldown[i] * 70 )/ 100)</td>
                    }
                </tr>
                <tr style="text-align:center">
                    <th scope="row">40 %</th>
                    @for (int i = 0; i < nbQspell; i++)
                    {
                        <td>@((Model.spells[0].cooldown[i]* 60 )/ 100)</td>
                    }
                    @for (int i = 0; i < nbWspell; i++)
                    {
                        <td>@((Model.spells[1].cooldown[i]* 60 )/ 100)</td>
                    }
                    @for (int i = 0; i < nbEspell; i++)
                    {
                        <td>@((Model.spells[2].cooldown[i]* 60 )/ 100)</td>
                    }
                    @for (int i = 0; i < nbRspell; i++)
                    {
                        <td>@((Model.spells[3].cooldown[i]* 60 )/ 100)</td>
                    }
                </tr>
                <tr style="text-align:center">
                    <th scope="row">45 %</th>
                    @for (int i = 0; i < nbQspell; i++)
                    {
                        <td>@((Model.spells[0].cooldown[i]* 65 )/ 100)</td>
                    }
                    @for (int i = 0; i < nbWspell; i++)
                    {
                        <td>@((Model.spells[1].cooldown[i]* 65 )/ 100)</td>
                    }
                    @for (int i = 0; i < nbEspell; i++)
                    {
                        <td>@((Model.spells[2].cooldown[i]* 65 )/ 100)</td>
                    }
                    @for (int i = 0; i < nbRspell; i++)
                    {
                        <td>@((Model.spells[3].cooldown[i]* 65 )/ 100)</td>
                    }
                </tr>
            </tbody>
        </table>
    } }



<script>
$(document).ready(function(){

    function formatState(state) {
        if (!state.id) {
            return state.text;
        }
        var baseUrl = "@(ConfigurationManager.AppSettings["UrlImgChamp"].ToLower())";
        var $state = $('<span><img style="height:25px" src="' + baseUrl + '/' + state.element.text + '.png"/><strong>  '+ state.element.text +'</strong></span>');
        return $state;
    }

    $("#e2_2").select2({
    placeholder: "Select a champion",
        templateResult: formatState,
        maximumSelectionSize: 1,
    });

    $('#e2_2').on('select2:select', function (e) {
        $("#AddChampForm").submit();
    });

    $('#e2_2').on('select2:open', function (e) {
        console.log("open");
        setTimeout(function () { $(".select2-dropdown--below").css('width', '1110px'); }, 100);

    });

});
</script>
<style>

    #select2-e2_2-results {
        display: flex;
    }

    .select2-results__group {
        text-align: center;
    }

    .select2-results__options--nested {
        font-size: 12px;
        width: 140px;
    }

    select2-dropdown select2-dropdown--below {
        width: 1110px;
    }

    .select2-results__options--nested:last-child {
        width: 136px;
    }

    .imgSpell {
        height: 35px;
        margin-right: 5px;
    }

    .container {
        max-width: 1400px;
    }

    /*.hoverTable {
        width: 100%;
        border-collapse: collapse;
    }

    .hoverTable td {
        padding: 7px;
        border: #4e95f4 1px solid;
    }
 
        // Define the hover highlight color for the table row 
        .hoverTable tr:hover {
            background-color: #ffff99 !important;
        }*/

</style>
